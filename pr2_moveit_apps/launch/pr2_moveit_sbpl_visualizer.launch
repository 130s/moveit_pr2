<launch>
  <arg name="allow_trajectory_execution" default="false"/>
  <arg name="monitor_robot_state" default="false" />

  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <rosparam command="load" file="$(find pr2_moveit_config)/config/link_spheres.yaml"/>

  <include file="$(find pr2_moveit_config)/launch/planning_context.launch" />

  <node unless="$(arg monitor_robot_state)" pkg="robot_state_publisher" type="state_publisher" name="rob_st_pub" />
  <node unless="$(arg monitor_robot_state)" pkg="moveit_visualization_ros" name="wall_clock_server" type="fake_time.py" />

  <arg name="planning_plugin" value="sbpl_interface_ros/SBPLPlanner" />
  <!--arg name="planning_plugin" value="ompl_interface_ros/OMPLPlanner" /-->

  <arg name="planning_adapters" value="default_planner_request_adapters/FixWorkspaceBounds default_planner_request_adapters/FixStartStateBounds default_planner_request_adapters/FixStartStateCollision default_planner_request_adapters/FixStartStatePathConstraints default_planner_request_adapters/AddTimeParameterization" />

  <param name="request_adapters" value="$(arg planning_adapters)" />

  <rosparam command="load" file="$(find pr2_moveit_config)/config/kinematics.yaml"/>

  <include ns="moveit_visualization_ros" file="$(find pr2_moveit_config)/launch/trajectory_execution.launch">
    <arg name="moveit_controller_manager" value="pr2" /> 
    <arg name="moveit_manage_controllers" value="true" />
  </include>
 
  <node pkg="moveit_visualization_ros" type="moveit_visualizer" name="moveit_visualizer" output="screen">
    <param name="planning_plugin" value="$(arg planning_plugin)" />
    <param name="allow_trajectory_execution" value="$(arg allow_trajectory_execution)"/>
  </node>

</launch>
