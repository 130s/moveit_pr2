<launch>
  <arg name="monitor_robot_state" default="false"/>
  <arg name="allow_trajectory_execution" default="false"/>
  <arg name="do_object_recognition" default="false"/>

  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />
  
  <param unless="$(arg monitor_robot_state)" name="robot_description" textfile="$(find planning_models)/test/urdf/robot.xml" />
  <param name="robot_description_semantic" textfile="$(find planning_models)/test/srdf/robot.xml" />
  <rosparam command="load" file="$(find pr2_manipulation)/config/grasping.yaml"/>

  <rosparam if="$(arg allow_trajectory_execution)" command="load" file="$(find pr2_moveit_config)/config/pr2_both_arms_controllers.yaml" />

  <group ns="robot_description_planning">
    <rosparam command="load" file="$(find pr2_moveit_config)/config/collision_matrix.yaml"/>
    <rosparam command="load" file="$(find pr2_moveit_config)/config/joint_limits.yaml"/>
  </group>
  
  <node unless="$(arg monitor_robot_state)" pkg="robot_state_publisher" type="state_publisher" name="rob_st_pub" />
  <node unless="$(arg monitor_robot_state)" pkg="moveit_visualization_ros" name="wall_clock_server" type="fake_time.py" />

  <rosparam if="$(arg do_object_recognition)" command="load" file="$(find moveit_household_objects_database)/config/wgs36.yaml" />
  <node if="$(arg do_object_recognition)" pkg="moveit_household_objects_database" name="moveit_household_objects_database_node"
	type="objects_database_node"/>
  <include if="$(arg do_object_recognition)" file="$(find moveit_tabletop_object_detector)/launch/tabletop_segmentation.launch"/>
  <include if="$(arg do_object_recognition)" file="$(find moveit_tabletop_object_detector)/launch/tabletop_object_recognition.launch"/>

  <node pkg="moveit_manipulation_visualization" type="moveit_manipulation_visualizer" name="moveit_manipulation_visualizer" output="screen" launch-prefix="$(arg launch_prefix)">
    <rosparam command="load" file="$(find pr2_moveit_config)/config/ompl_planning.yaml"/>
    <rosparam command="load" file="$(find pr2_moveit_config)/config/kinematics.yaml"/>
    <rosparam if="$(arg allow_trajectory_execution)" file="$(find pr2_moveit_config)/config/pr2_execution_controllers.yaml"/>
    <param name="request_adapters" value="default_planner_request_adapters/FixStartStateBounds default_planner_request_adapters/FixStartStatePathConstraints default_planner_request_adapters/FixWorkspaceBounds default_planner_request_adapters/FixStartStateCollision" />
    <param name="monitor_robot_state" value="$(arg monitor_robot_state)"/>
    <param name="allow_trajectory_execution" value="$(arg allow_trajectory_execution)"/>
    <param name="do_object_recognition" value="$(arg do_object_recognition)"/>
    <param name="start_state_max_bounds_error" value=".01"/>
  </node>

</launch>
