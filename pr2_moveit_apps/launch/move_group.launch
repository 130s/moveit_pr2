<launch>
  <arg name="monitor_robot_state" default="true"/>
  <arg name="allow_trajectory_execution" default="true"/>

  <include file="$(find pr2_moveit_config)/launch/planning_context.launch" />

  <arg name="planning_plugin" default="ompl_interface_ros/OMPLPlanner" />
  <arg name="planning_adapters" default="default_planner_request_adapters/FixWorkspaceBounds default_planner_request_adapters/FixStartStateBounds default_planner_request_adapters/FixStartStateCollision default_planner_request_adapters/FixStartStatePathConstraints" />
  
  <node name="move_group" launch-prefix="gdb --args " pkg="move_group" type="move_group_action_server" respawn="false" output="screen">
    <param name="planning_plugin" value="$(arg planning_plugin)" />
    <param name="request_adapters" value="$(arg planning_adapters)" />
    <rosparam if="$(arg allow_trajectory_execution)" file="$(find pr2_moveit_config)/config/pr2_execution_controllers.yaml"/>
    <rosparam command="load" file="$(find pr2_moveit_config)/config/kinematics.yaml"/>
    <rosparam command="load" file="$(find pr2_moveit_config)/config/ompl_planning.yaml"/>
    <param name="monitor_robot_state" value="$(arg monitor_robot_state)"/>
    <param name="allow_trajectory_execution" value="$(arg allow_trajectory_execution)"/>
  </node>
  
</launch>
